; Zilog eZ80 ANSI C Compiler Release 3.4
; -optsize -noreduceopt -nomodsect -peephole -globalopt
; -localcse -const=ROM 
	FILE	"..\SRC\MAIN.C"
	.assume ADL=1
	SEGMENT DATA
_lessonInfo:
	DW	0
	DB	0
	SEGMENT BSS
_weekB:
	DS	1
_classB:
	DS	1
_showingHelp:
	DS	1
;    1	#include <tice.h>
;    2	#include <graphx.h>
;    3	#include <stdint.h>
;    4	#include <stdbool.h>
;    5	#include <stdlib.h>
;    6	#include <stdio.h>
;    7	#include <fileioc.h>
;    8	#include <string.h>
;    9	//#include <debug.h>
;   10	
;   11	#define lessonWidth 64
;   12	#define lessonHeight 32
;   13	#define lessonHeightMargin (8 / 3)
;   14	#define lessonBorderColor 0
;   15	
;   16	#define colorEngelska 230
;   17	#define colorFysik 47
;   18	#define colorHistoria 30
;   19	#define colorIdrott 253
;   20	#define colorKemi 63
;   21	#define colorLunch 224
;   22	#define colorMatte 15
;   23	#define colorMentorstid 223
;   24	#define colorResurstid 104
;   25	#define colorSvenska 231
;   26	#define colorTeknik 5
;   27	
;   28	#define textColorDark 0
;   29	#define textColorLight 255
;   30	#define textColorTransparent 254
;   31	
;   32	#define modeREAD "r"
;   33	#define modeWRITE "w"
;   34	
;   35	#define classBvarName "classB"
;   36	
;   37	enum LessonInfo { NameLocation, TimeStartEnd, TeacherLength };
;   38	enum LessonInfo lessonInfo = NameLocation;
;   39	
;   40	void drawLessons();
;   41	void drawHelp();
;   42	void drawLesson();
;   43	enum LessonInfo nextMode();
;   44	uint8_t getWeekNumber();
;   45	bool getWeekB();
;   46	
;   47	bool weekB;
;   48	bool classB;
;   49	bool showingHelp;
	SEGMENT CODE
;   50	
;   51	void main(void) {
_main:
	LD	HL,-8
	CALL	__frameset
;   52	    sk_key_t key;
;   53	    uint8_t week;
;   54	    ti_var_t classBvar;
;   55	
;   56	    gfx_Begin();
	CALL	_gfx_Begin
;   57	
;   58	    gfx_SetDrawBuffer();
	LD	BC,1
	PUSH	BC
	CALL	_gfx_SetDraw
	POP	BC
;   59	
;   60	    classBvar = ti_Open(classBvarName, modeREAD);
	LD	BC,L__0
	PUSH	BC
	LD	BC,L__1
	PUSH	BC
	CALL	_ti_Open
	POP	BC
	POP	BC
	LD	(IX+-2),A
;   61	
;   62	    weekB = getWeekB();
	CALL	_getWeekB
	LD	(_weekB),A
;   63	    classB = ti_GetC(classBvar);
	LD	C,(IX+-2)
	LD	B,0
	PUSH	BC
	CALL	_ti_GetC
	POP	BC
	LD	A,L
	LD	(_classB),A
;   64	
;   65	    ti_Close(classBvar);
	LD	C,(IX+-2)
	LD	B,0
	PUSH	BC
	CALL	_ti_Close
	POP	BC
;   66	
;   67	    drawLessons();
	CALL	_drawLessons
;   68	
;   69	    gfx_SwapDraw();
	CALL	_gfx_SwapDraw
;   70	
;   71	    while((key = os_GetCSC()) != 9){
	JR	L_22
L_23:
;   72	        if(showingHelp && key != 0){
	LD	A,(_showingHelp)
	OR	A,A
	JR	Z,L_21
	LD	A,(IX+-1)
	OR	A,A
	JR	Z,L_21
;   73	            showingHelp = false;
	XOR	A,A
	LD	(_showingHelp),A
;   74	            drawLessons();
	CALL	_drawLessons
;   75	            gfx_SwapDraw();
	CALL	_gfx_SwapDraw
;   76	        } else if(key == 1 || key == 4 || key == 54){
	JR	L_22
L_21:
	LD	A,(IX+-1)
	CP	A,1
	JR	Z,L_18
	LD	A,(IX+-1)
	CP	A,4
	JR	Z,L_18
	LD	A,(IX+-1)
	CP	A,54
	JR	NZ,L_19
L_18:
;   77	            showingHelp = false;
	XOR	A,A
	LD	(_showingHelp),A
;   78	            lessonInfo = nextMode(lessonInfo, key != 4);
	LD	A,(IX+-1)
	CP	A,4
	JR	Z,L__8
	LD	A,1
	JR	L__9
L__8:
	XOR	A,A
L__9:
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	BC,(_lessonInfo)
	PUSH	BC
	CALL	_nextMode
	POP	BC
	POP	BC
	LD	(_lessonInfo),HL
;   79	            drawLessons();
	CALL	_drawLessons
;   80	            gfx_SwapDraw();
	CALL	_gfx_SwapDraw
;   81	        } else if(key == 2 || key == 3 || key == 48){
	JR	L_22
L_19:
	LD	A,(IX+-1)
	CP	A,2
	JR	Z,L_16
	LD	A,(IX+-1)
	CP	A,3
	JR	Z,L_16
	LD	A,(IX+-1)
	CP	A,48
	JR	NZ,L_17
L_16:
;   82	            showingHelp = false;
	XOR	A,A
	LD	(_showingHelp),A
;   83	            weekB = !weekB;
	LD	A,(_weekB)
	OR	A,A
	JR	NZ,L_6
	LD	BC,1
	LD	(IX+-8),BC
	JR	L_7
L_6:
	LD	BC,0
	LD	(IX+-8),BC
L_7:
	LD	A,(IX+-8)
	LD	(_weekB),A
;   84	            drawLessons();
	CALL	_drawLessons
;   85	            gfx_SwapDraw();
	CALL	_gfx_SwapDraw
;   86	        } else if(key == 15){
	JR	L_22
L_17:
	LD	A,(IX+-1)
	CP	A,15
	JR	NZ,L_15
;   87	            showingHelp = false;
	XOR	A,A
	LD	(_showingHelp),A
;   88	            classB = !classB;
	LD	A,(_classB)
	OR	A,A
	JR	NZ,L_10
	LD	BC,1
	LD	(IX+-5),BC
	JR	L_11
L_10:
	LD	BC,0
	LD	(IX+-5),BC
L_11:
	LD	A,(IX+-5)
;   89	            classBvar = ti_Open(classBvarName, modeWRITE);
	LD	BC,L__16
	PUSH	BC
	LD	BC,L__17
	PUSH	BC
	LD	(_classB),A
	CALL	_ti_Open
	POP	BC
	POP	BC
	LD	(IX+-2),A
;   90	            ti_PutC(classB, classBvar);
	LD	C,(IX+-2)
	LD	A,(_classB)
	LD	B,0
	PUSH	BC
	LD	C,A
	PUSH	BC
	CALL	_ti_PutC
	POP	BC
	POP	BC
;   91	            ti_Close(classBvar);
	LD	C,(IX+-2)
	LD	B,0
	PUSH	BC
	CALL	_ti_Close
	POP	BC
;   92	            drawLessons();
	CALL	_drawLessons
;   93	            gfx_SwapDraw();
	CALL	_gfx_SwapDraw
;   94	        } else if(key == 45){
	JR	L_22
L_15:
	LD	A,(IX+-1)
	CP	A,45
	JR	NZ,L_22
;   95	            showingHelp = false;
	XOR	A,A
	LD	(_showingHelp),A
;   96	            drawHelp();
	CALL	_drawHelp
;   97	            gfx_SwapDraw();
	CALL	_gfx_SwapDraw
;   98	        }
;   99	    };
L_22:
	CALL	_os_GetCSC
	LD	(IX+-1),A
	CP	A,9
	JR	NZ,L_23
;  100	
;  101	    gfx_End();
	CALL	_gfx_End
;  102	    ti_CloseAll();
	CALL	_ti_CloseAll
;  103	}
	LD	SP,IX
	POP	IX
	RET	


;**************************** _main ***************************
;Name                         Addr/Register   Size   Type
;_ti_CloseAll                        IMPORT  -----   function
;_gfx_End                            IMPORT  -----   function
;_os_GetCSC                          IMPORT  -----   function
;_drawHelp                           IMPORT  -----   function
;_ti_PutC                            IMPORT  -----   function
;_lessonInfo                         STATIC      3   variable
;_nextMode                           IMPORT  -----   function
;_showingHelp                        STATIC      1   variable
;_gfx_SwapDraw                       IMPORT  -----   function
;_drawLessons                        IMPORT  -----   function
;_ti_Close                           IMPORT  -----   function
;_classB                             STATIC      1   variable
;_ti_GetC                            IMPORT  -----   function
;_weekB                              STATIC      1   variable
;_getWeekB                           IMPORT  -----   function
;_ti_Open                            IMPORT  -----   function
;_gfx_SetDraw                        IMPORT  -----   function
;_gfx_Begin                          IMPORT  -----   function
;temp8                                 IX-8      3   variable
;temp12                                IX-5      3   variable
;classBvar                             IX-2      1   variable
;key                                   IX-1      1   variable


; Stack Frame Size: 14 (bytes)
;       Spill Code: 0 (instruction)


	SEGMENT STRSECT
L__0:
	DB	"r"
	DB	0
L__1:
	DB	"classB"
	DB	0
L__16:
	DB	"w"
	DB	0
L__17:
	DB	"classB"
	DB	0
	SEGMENT CODE
;  104	void drawLessons(void){
_drawLessons:
	LD	HL,-19
	CALL	__frameset
;  105	    uint8_t day;
;  106	    uint8_t month;
;  107	    uint16_t year;
;  108	    char* dateMsg = malloc(32);
	LD	BC,32
	PUSH	BC
	CALL	_malloc
	POP	BC
	LD	(IX+-3),HL
;  109	    char* dayS = malloc(32);
	LD	BC,32
	PUSH	BC
	CALL	_malloc
	POP	BC
	LD	(IX+-8),HL
;  110	    char* monthS = malloc(32);
	LD	BC,32
	PUSH	BC
	CALL	_malloc
	POP	BC
	LD	(IX+-11),HL
;  111	    char* yearS = malloc(32);
	LD	BC,32
	PUSH	BC
	CALL	_malloc
	POP	BC
	LD	(IX+-14),HL
;  112	    char* weekS = malloc(32);
	LD	BC,32
	PUSH	BC
	CALL	_malloc
	POP	BC
	LD	(IX+-17),HL
;  113	
;  114	    memset(dateMsg, 0, sizeof(dateMsg));
	LD	BC,3
	PUSH	BC
	LD	BC,0
	PUSH	BC
	LD	BC,(IX+-3)
	PUSH	BC
	CALL	_memset
	POP	BC
	POP	BC
	POP	BC
;  115	
;  116	    gfx_FillScreen(255);
	LD	BC,255
	PUSH	BC
	CALL	_gfx_FillScreen
	POP	BC
;  117	
;  118	    gfx_SetColor(31);
	LD	BC,31
	PUSH	BC
	CALL	_gfx_SetColor
	POP	BC
;  119	    //MÃ¥ndag
;  120	    drawLesson(0 * lessonWidth, 0 * (lessonHeight + lessonHeightMargin), "Teknik", "B107", "chuga", "01:30", colorTeknik, textColorLight, "08:00", "09:30");
	LD	BC,L__21
	PUSH	BC
	LD	BC,L__22
	PUSH	BC
	LD	BC,255
	PUSH	BC
	LD	BC,5
	PUSH	BC
	LD	BC,L__23
	PUSH	BC
	LD	BC,L__24
	PUSH	BC
	LD	BC,L__25
	PUSH	BC
	LD	BC,L__26
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	CALL	_drawLesson
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
;  121	    drawLesson(0 * lessonWidth, 1 * (lessonHeight + lessonHeightMargin), "Mentorstid", "B107", "selfr, altla", "00:40", colorMentorstid, textColorDark, "09:35", "10:15");
	LD	BC,L__27
	PUSH	BC
	LD	BC,L__28
	PUSH	BC
	LD	BC,0
	PUSH	BC
	LD	BC,223
	PUSH	BC
	LD	BC,L__29
	PUSH	BC
	LD	BC,L__30
	PUSH	BC
	LD	BC,L__31
	PUSH	BC
	LD	BC,L__32
	PUSH	BC
	LD	BC,34
	PUSH	BC
	LD	BC,0
	PUSH	BC
	CALL	_drawLesson
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
;  122	    drawLesson(0 * lessonWidth, 2 * (lessonHeight + lessonHeightMargin), "Matte", "B107", "drada", "01:20", colorMatte, textColorDark, "10:20", "11:40");
	LD	BC,L__33
	PUSH	BC
	LD	BC,L__34
	PUSH	BC
	LD	BC,0
	PUSH	BC
	LD	BC,15
	PUSH	BC
	LD	BC,L__35
	PUSH	BC
	LD	BC,L__36
	PUSH	BC
	LD	BC,L__37
	PUSH	BC
	LD	BC,L__38
	PUSH	BC
	LD	BC,68
	PUSH	BC
	LD	BC,0
	PUSH	BC
	CALL	_drawLesson
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
;  123	    drawLesson(0 * lessonWidth, 3 * (lessonHeight + lessonHeightMargin), "Lunch", "", "", "00:45", colorLunch, textColorLight, "11:50", "12:35");
	LD	BC,L__39
	PUSH	BC
	LD	BC,L__40
	PUSH	BC
	LD	BC,255
	PUSH	BC
	LD	BC,224
	PUSH	BC
	LD	BC,L__41
	PUSH	BC
	LD	BC,L__42
	PUSH	BC
	LD	BC,L__43
	PUSH	BC
	LD	BC,L__44
	PUSH	BC
	LD	BC,102
	PUSH	BC
	LD	BC,0
	PUSH	BC
	CALL	_drawLesson
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
;  124	    drawLesson(0 * lessonWidth, 4 * (lessonHeight + lessonHeightMargin), "Svenska", "B107", "selfr", "01:10", colorSvenska, textColorDark, "12:55", "14:05");
	LD	BC,L__45
	PUSH	BC
	LD	BC,L__46
	PUSH	BC
	LD	BC,0
	PUSH	BC
	LD	BC,231
	PUSH	BC
	LD	BC,L__47
	PUSH	BC
	LD	BC,L__48
	PUSH	BC
	LD	BC,L__49
	PUSH	BC
	LD	BC,L__50
	PUSH	BC
	LD	BC,136
	PUSH	BC
	LD	BC,0
	PUSH	BC
	CALL	_drawLesson
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
;  125	
;  126	    drawLesson(0 * lessonWidth, 6 * (lessonHeight + lessonHeightMargin), "Historia", "B107", "olser", "01:20", colorHistoria, textColorDark, "15:40", "17:00");
	LD	BC,L__51
	PUSH	BC
	LD	BC,L__52
	PUSH	BC
	LD	BC,0
	PUSH	BC
	LD	BC,30
	PUSH	BC
	LD	BC,L__53
	PUSH	BC
	LD	BC,L__54
	PUSH	BC
	LD	BC,L__55
	PUSH	BC
	LD	BC,L__56
	PUSH	BC
	LD	BC,204
	PUSH	BC
	LD	BC,0
	PUSH	BC
	CALL	_drawLesson
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
;  127	
;  128	    //Tisdag
;  129	    drawLesson(1 * lessonWidth, 0 * (lessonHeight + lessonHeightMargin), "Svenska", "A158", "selfr", "01:00", colorSvenska, textColorDark, "08:10", "09:10");
	LD	BC,L__57
	PUSH	BC
	LD	BC,L__58
	PUSH	BC
	LD	BC,0
	PUSH	BC
	LD	BC,231
	PUSH	BC
	LD	BC,L__59
	PUSH	BC
	LD	BC,L__60
	PUSH	BC
	LD	BC,L__61
	PUSH	BC
	LD	BC,L__62
	PUSH	BC
	LD	BC,0
	PUSH	BC
	LD	BC,64
	PUSH	BC
	CALL	_drawLesson
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
;  130	    drawLesson(1 * lessonWidth, 1 * (lessonHeight + lessonHeightMargin), "Teknik", "B107", "chuga", "01:30", colorTeknik, textColorLight, "09:30", "11:00");
	LD	BC,L__63
	PUSH	BC
	LD	BC,L__64
	PUSH	BC
	LD	BC,255
	PUSH	BC
	LD	BC,5
	PUSH	BC
	LD	BC,L__65
	PUSH	BC
	LD	BC,L__66
	PUSH	BC
	LD	BC,L__67
	PUSH	BC
	LD	BC,L__68
	PUSH	BC
	LD	BC,34
	PUSH	BC
	LD	BC,64
	PUSH	BC
	CALL	_drawLesson
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
;  131	    drawLesson(1 * lessonWidth, 2 * (lessonHeight + lessonHeightMargin), "Lunch", "", "", "00:55", colorLunch, textColorLight, "11:00", "11:55");
	LD	BC,L__69
	PUSH	BC
	LD	BC,L__70
	PUSH	BC
	LD	BC,255
	PUSH	BC
	LD	BC,224
	PUSH	BC
	LD	BC,L__71
	PUSH	BC
	LD	BC,L__72
	PUSH	BC
	LD	BC,L__73
	PUSH	BC
	LD	BC,L__74
	PUSH	BC
	LD	BC,68
	PUSH	BC
	LD	BC,64
	PUSH	BC
	CALL	_drawLesson
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
;  132	    drawLesson(1 * lessonWidth, 3 * (lessonHeight + lessonHeightMargin), "Kemi", "H329", "altla", "00:50", colorKemi, textColorDark, "11:55", "12:45");
	LD	BC,L__75
	PUSH	BC
	LD	BC,L__76
	PUSH	BC
	LD	BC,0
	PUSH	BC
	LD	BC,63
	PUSH	BC
	LD	BC,L__77
	PUSH	BC
	LD	BC,L__78
	PUSH	BC
	LD	BC,L__79
	PUSH	BC
	LD	BC,L__80
	PUSH	BC
	LD	BC,102
	PUSH	BC
	LD	BC,64
	PUSH	BC
	CALL	_drawLesson
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
;  133	    drawLesson(1 * lessonWidth, 4 * (lessonHeight + lessonHeightMargin), "Engelska", "B107", "jormo", "01:20", colorEngelska, textColorDark, "12:55", "14:15");
	LD	BC,L__81
	PUSH	BC
	LD	BC,L__82
	PUSH	BC
	LD	BC,0
	PUSH	BC
	LD	BC,230
	PUSH	BC
	LD	BC,L__83
	PUSH	BC
	LD	BC,L__84
	PUSH	BC
	LD	BC,L__85
	PUSH	BC
	LD	BC,L__86
	PUSH	BC
	LD	BC,136
	PUSH	BC
	LD	BC,64
	PUSH	BC
	CALL	_drawLesson
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
;  134	
;  135	    //Onsdag
;  136	    drawLesson(2 * lessonWidth, 1 * (lessonHeight + lessonHeightMargin), "Matte", "H341", "drada", "01:10", colorMatte, textColorDark, "09:25", "10:35");
	LD	BC,L__87
	PUSH	BC
	LD	BC,L__88
	PUSH	BC
	LD	BC,0
	PUSH	BC
	LD	BC,15
	PUSH	BC
	LD	BC,L__89
	PUSH	BC
	LD	BC,L__90
	PUSH	BC
	LD	BC,L__91
	PUSH	BC
	LD	BC,L__92
	PUSH	BC
	LD	BC,34
	PUSH	BC
	LD	BC,128
	PUSH	BC
	CALL	_drawLesson
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
;  137	    drawLesson(2 * lessonWidth, 2 * (lessonHeight + lessonHeightMargin), "Fysik", "F206", "drada", "00:50", colorFysik, textColorDark, "10:40", "11:30");
	LD	BC,L__93
	PUSH	BC
	LD	BC,L__94
	PUSH	BC
	LD	BC,0
	PUSH	BC
	LD	BC,47
	PUSH	BC
	LD	BC,L__95
	PUSH	BC
	LD	BC,L__96
	PUSH	BC
	LD	BC,L__97
	PUSH	BC
	LD	BC,L__98
	PUSH	BC
	LD	BC,68
	PUSH	BC
	LD	BC,128
	PUSH	BC
	CALL	_drawLesson
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
;  138	    drawLesson(2 * lessonWidth, 3 * (lessonHeight + lessonHeightMargin), "Lunch", "", "", "00:45", colorLunch, textColorLight, "11:30", "12:15");
	LD	BC,L__99
	PUSH	BC
	LD	BC,L__100
	PUSH	BC
	LD	BC,255
	PUSH	BC
	LD	BC,224
	PUSH	BC
	LD	BC,L__101
	PUSH	BC
	LD	BC,L__102
	PUSH	BC
	LD	BC,L__103
	PUSH	BC
	LD	BC,L__104
	PUSH	BC
	LD	BC,102
	PUSH	BC
	LD	BC,128
	PUSH	BC
	CALL	_drawLesson
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
;  139	
;  140	    //Tordag
;  141	    drawLesson(3 * lessonWidth, 0 * (lessonHeight + lessonHeightMargin), "Matte", "F206", "drada", "01:00", colorMatte, textColorDark, "08:00", "09:00");
	LD	BC,L__105
	PUSH	BC
	LD	BC,L__106
	PUSH	BC
	LD	BC,0
	PUSH	BC
	LD	BC,15
	PUSH	BC
	LD	BC,L__107
	PUSH	BC
	LD	BC,L__108
	PUSH	BC
	LD	BC,L__109
	PUSH	BC
	LD	BC,L__110
	PUSH	BC
	LD	BC,0
	PUSH	BC
	LD	BC,192
	PUSH	BC
	CALL	_drawLesson
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
;  142	    drawLesson(3 * lessonWidth, 1 * (lessonHeight + lessonHeightMargin), "Idrott", "", "tejpe", "01:30", colorIdrott, textColorDark, "09:40", "11:10");
	LD	BC,L__111
	PUSH	BC
	LD	BC,L__112
	PUSH	BC
	LD	BC,0
	PUSH	BC
	LD	BC,253
	PUSH	BC
	LD	BC,L__113
	PUSH	BC
	LD	BC,L__114
	PUSH	BC
	LD	BC,L__115
	PUSH	BC
	LD	BC,L__116
	PUSH	BC
	LD	BC,34
	PUSH	BC
	LD	BC,192
	PUSH	BC
	CALL	_drawLesson
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
;  143	    drawLesson(3 * lessonWidth, 2 * (lessonHeight + lessonHeightMargin), "Lunch", "", "", "00:45", colorLunch, textColorLight, "11:35", "12:20");
	LD	BC,L__117
	PUSH	BC
	LD	BC,L__118
	PUSH	BC
	LD	BC,255
	PUSH	BC
	LD	BC,224
	PUSH	BC
	LD	BC,L__119
	PUSH	BC
	LD	BC,L__120
	PUSH	BC
	LD	BC,L__121
	PUSH	BC
	LD	BC,L__122
	PUSH	BC
	LD	BC,68
	PUSH	BC
	LD	BC,192
	PUSH	BC
	CALL	_drawLesson
	LD	IY,30
	ADD	IY,SP
;  144	    if(!classB && !weekB){
	LD	A,(_classB)
	OR	A,A
	LD	SP,IY
	JR	NZ,L_36
	LD	A,(_weekB)
	OR	A,A
	JR	NZ,L_36
;  145	        drawLesson(3 * lessonWidth, 3 * (lessonHeight + lessonHeightMargin), "Fysik", "F204La", "drada", "01:20", colorFysik, textColorDark, "12:20", "13:40");
	LD	BC,L__125
	PUSH	BC
	LD	BC,L__126
	PUSH	BC
	LD	BC,0
	PUSH	BC
	LD	BC,47
	PUSH	BC
	LD	BC,L__127
	PUSH	BC
	LD	BC,L__128
	PUSH	BC
	LD	BC,L__129
	PUSH	BC
	LD	BC,L__130
	PUSH	BC
	LD	BC,102
	PUSH	BC
	LD	BC,192
	PUSH	BC
	CALL	_drawLesson
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
;  146	        drawLesson(3 * lessonWidth, 4 * (lessonHeight + lessonHeightMargin), "Teknik", "H341", "chuga", "01:30", colorTeknik, textColorLight, "14:00", "15:30");
	LD	BC,L__131
	PUSH	BC
	LD	BC,L__132
	PUSH	BC
	LD	BC,255
	PUSH	BC
	LD	BC,5
	PUSH	BC
	LD	BC,L__133
	PUSH	BC
	LD	BC,L__134
	PUSH	BC
	LD	BC,L__135
	PUSH	BC
	LD	BC,L__136
	PUSH	BC
	LD	BC,136
	PUSH	BC
	LD	BC,192
	PUSH	BC
	CALL	_drawLesson
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
;  147	    } else if(!classB && weekB){
	JR	L_37
L_36:
	LD	A,(_classB)
	OR	A,A
	JR	NZ,L_34
	LD	A,(_weekB)
	OR	A,A
	JR	Z,L_34
;  148	        drawLesson(3 * lessonWidth, 3 * (lessonHeight + lessonHeightMargin), "Teknik", "H341", "chuga", "01:30", colorTeknik, textColorLight, "12:20", "13:50");
	LD	BC,L__139
	PUSH	BC
	LD	BC,L__140
	PUSH	BC
	LD	BC,255
	PUSH	BC
	LD	BC,5
	PUSH	BC
	LD	BC,L__141
	PUSH	BC
	LD	BC,L__142
	PUSH	BC
	LD	BC,L__143
	PUSH	BC
	LD	BC,L__144
	PUSH	BC
	LD	BC,102
	PUSH	BC
	LD	BC,192
	PUSH	BC
	CALL	_drawLesson
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
;  149	        drawLesson(3 * lessonWidth, 4 * (lessonHeight + lessonHeightMargin), "Kemi", "H324La", "altla", "01:20", colorKemi, textColorDark, "14:00", "15:20");
	LD	BC,L__145
	PUSH	BC
	LD	BC,L__146
	PUSH	BC
	LD	BC,0
	PUSH	BC
	LD	BC,63
	PUSH	BC
	LD	BC,L__147
	PUSH	BC
	LD	BC,L__148
	PUSH	BC
	LD	BC,L__149
	PUSH	BC
	LD	BC,L__150
	PUSH	BC
	LD	BC,136
	PUSH	BC
	LD	BC,192
	PUSH	BC
	CALL	_drawLesson
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
;  150	    } else if(classB && !weekB){
	JR	L_37
L_34:
	LD	A,(_classB)
	OR	A,A
	JR	Z,L_32
	LD	A,(_weekB)
	OR	A,A
	JR	NZ,L_32
;  151	        drawLesson(3 * lessonWidth, 3 * (lessonHeight + lessonHeightMargin), "Teknik", "H341", "chuga", "01:30", colorTeknik, textColorLight, "12:20", "13:50");
	LD	BC,L__153
	PUSH	BC
	LD	BC,L__154
	PUSH	BC
	LD	BC,255
	PUSH	BC
	LD	BC,5
	PUSH	BC
	LD	BC,L__155
	PUSH	BC
	LD	BC,L__156
	PUSH	BC
	LD	BC,L__157
	PUSH	BC
	LD	BC,L__158
	PUSH	BC
	LD	BC,102
	PUSH	BC
	LD	BC,192
	PUSH	BC
	CALL	_drawLesson
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
;  152	        drawLesson(3 * lessonWidth, 4 * (lessonHeight + lessonHeightMargin), "Fysik", "F204La", "drada", "01:20", colorFysik, textColorDark, "14:00", "15:20");
	LD	BC,L__159
	PUSH	BC
	LD	BC,L__160
	PUSH	BC
	LD	BC,0
	PUSH	BC
	LD	BC,47
	PUSH	BC
	LD	BC,L__161
	PUSH	BC
	LD	BC,L__162
	PUSH	BC
	LD	BC,L__163
	PUSH	BC
	LD	BC,L__164
	PUSH	BC
	LD	BC,136
	PUSH	BC
	LD	BC,192
	PUSH	BC
	CALL	_drawLesson
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
;  153	    } else if(classB && weekB){
	JR	L_37
L_32:
	LD	A,(_classB)
	OR	A,A
	JR	Z,L_37
	LD	A,(_weekB)
	OR	A,A
	JR	Z,L_37
;  154	        drawLesson(3 * lessonWidth, 3 * (lessonHeight + lessonHeightMargin), "Kemi", "H324La", "altla", "01:20", colorKemi, textColorDark, "12:20", "13:40");
	LD	BC,L__167
	PUSH	BC
	LD	BC,L__168
	PUSH	BC
	LD	BC,0
	PUSH	BC
	LD	BC,63
	PUSH	BC
	LD	BC,L__169
	PUSH	BC
	LD	BC,L__170
	PUSH	BC
	LD	BC,L__171
	PUSH	BC
	LD	BC,L__172
	PUSH	BC
	LD	BC,102
	PUSH	BC
	LD	BC,192
	PUSH	BC
	CALL	_drawLesson
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
;  155	        drawLesson(3 * lessonWidth, 4 * (lessonHeight + lessonHeightMargin), "Teknik", "H341", "chuga", "01:30", colorTeknik, textColorLight, "14:00", "15:30");
	LD	BC,L__173
	PUSH	BC
	LD	BC,L__174
	PUSH	BC
	LD	BC,255
	PUSH	BC
	LD	BC,5
	PUSH	BC
	LD	BC,L__175
	PUSH	BC
	LD	BC,L__176
	PUSH	BC
	LD	BC,L__177
	PUSH	BC
	LD	BC,L__178
	PUSH	BC
	LD	BC,136
	PUSH	BC
	LD	BC,192
	PUSH	BC
	CALL	_drawLesson
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
;  156	    }
L_37:
;  157	    drawLesson(3 * lessonWidth, 5 * (lessonHeight + lessonHeightMargin), "Resurstid", "", "", "01:00", colorResurstid, textColorLight, "15:30", "16:30");
	LD	BC,L__179
	PUSH	BC
	LD	BC,L__180
	PUSH	BC
	LD	BC,255
	PUSH	BC
	LD	BC,104
	PUSH	BC
	LD	BC,L__181
	PUSH	BC
	LD	BC,L__182
	PUSH	BC
	LD	BC,L__183
	PUSH	BC
	LD	BC,L__184
	PUSH	BC
	LD	BC,170
	PUSH	BC
	LD	BC,192
	PUSH	BC
	CALL	_drawLesson
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
;  158	
;  159	    //Fredag
;  160	    drawLesson(4 * lessonWidth, 1 * (lessonHeight + lessonHeightMargin), "Kemi", "H331", "altla", "01:00", colorKemi, textColorDark, "09:50", "10:50");
	LD	BC,L__185
	PUSH	BC
	LD	BC,L__186
	PUSH	BC
	LD	BC,0
	PUSH	BC
	LD	BC,63
	PUSH	BC
	LD	BC,L__187
	PUSH	BC
	LD	BC,L__188
	PUSH	BC
	LD	BC,L__189
	PUSH	BC
	LD	BC,L__190
	PUSH	BC
	LD	BC,34
	PUSH	BC
	LD	BC,256
	PUSH	BC
	CALL	_drawLesson
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
;  161	    drawLesson(4 * lessonWidth, 2 * (lessonHeight + lessonHeightMargin), "Lunch", "", "", "00:45", colorLunch, textColorLight, "11:00", "11:45");
	LD	BC,L__191
	PUSH	BC
	LD	BC,L__192
	PUSH	BC
	LD	BC,255
	PUSH	BC
	LD	BC,224
	PUSH	BC
	LD	BC,L__193
	PUSH	BC
	LD	BC,L__194
	PUSH	BC
	LD	BC,L__195
	PUSH	BC
	LD	BC,L__196
	PUSH	BC
	LD	BC,68
	PUSH	BC
	LD	BC,256
	PUSH	BC
	CALL	_drawLesson
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
;  162	    drawLesson(4 * lessonWidth, 3 * (lessonHeight + lessonHeightMargin), "Fysik", "F206", "drada", "01:20", colorFysik, textColorDark, "12:10", "13:30");
	LD	BC,L__197
	PUSH	BC
	LD	BC,L__198
	PUSH	BC
	LD	BC,0
	PUSH	BC
	LD	BC,47
	PUSH	BC
	LD	BC,L__199
	PUSH	BC
	LD	BC,L__200
	PUSH	BC
	LD	BC,L__201
	PUSH	BC
	LD	BC,L__202
	PUSH	BC
	LD	BC,102
	PUSH	BC
	LD	BC,256
	PUSH	BC
	CALL	_drawLesson
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
;  163	    drawLesson(4 * lessonWidth, 4 * (lessonHeight + lessonHeightMargin), "Engelska", "B107", "jormo", "01:00", colorEngelska, textColorDark, "13:40", "14:40");
	LD	BC,L__203
	PUSH	BC
	LD	BC,L__204
	PUSH	BC
	LD	BC,0
	PUSH	BC
	LD	BC,230
	PUSH	BC
	LD	BC,L__205
	PUSH	BC
	LD	BC,L__206
	PUSH	BC
	LD	BC,L__207
	PUSH	BC
	LD	BC,L__208
	PUSH	BC
	LD	BC,136
	PUSH	BC
	LD	BC,256
	PUSH	BC
	CALL	_drawLesson
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
;  164	    drawLesson(4 * lessonWidth, 5 * (lessonHeight + lessonHeightMargin), "Matte", "F203", "drada", "01:00", colorMatte, textColorDark, "14:50", "15:50");
	LD	BC,L__209
	PUSH	BC
	LD	BC,L__210
	PUSH	BC
	LD	BC,0
	PUSH	BC
	LD	BC,15
	PUSH	BC
	LD	BC,L__211
	PUSH	BC
	LD	BC,L__212
	PUSH	BC
	LD	BC,L__213
	PUSH	BC
	LD	BC,L__214
	PUSH	BC
	LD	BC,170
	PUSH	BC
	LD	BC,256
	PUSH	BC
	CALL	_drawLesson
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
;  165	    
;  166	    boot_GetDate(&day, &month, &year);
	PEA	IX+-19
	PEA	IX+-4
	PEA	IX+-5
	CALL	_boot_GetDate
	POP	BC
	POP	BC
	POP	BC
;  167	    sprintf(dayS, "%d", day);
	LD	A,(IX+-5)
	UEXT	HL
	LD	L,A
	PUSH	HL
	LD	BC,L__215
	PUSH	BC
	LD	BC,(IX+-8)
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  168	    sprintf(monthS, "%d", month);
	LD	A,(IX+-4)
	UEXT	HL
	LD	L,A
	PUSH	HL
	LD	BC,L__216
	PUSH	BC
	LD	BC,(IX+-11)
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  169	    sprintf(yearS, "%d", year);
	LD	BC,(IX+-19)
	CALL	__stoiu
	PUSH	HL
	LD	BC,L__217
	PUSH	BC
	LD	BC,(IX+-14)
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  170	    sprintf(weekS, "%d", getWeekNumber());
	CALL	_getWeekNumber
	UEXT	HL
	LD	L,A
	PUSH	HL
	LD	BC,L__218
	PUSH	BC
	LD	BC,(IX+-17)
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  171	    
;  172	    if(weekB == getWeekB()){
	CALL	_getWeekB
	LD	B,A
	LD	A,(_weekB)
	CP	A,B
	JR	NZ,L_39
;  173	        strcat(dateMsg, dayS);
	LD	BC,(IX+-8)
	PUSH	BC
	LD	BC,(IX+-3)
	PUSH	BC
	CALL	_strcat
	POP	BC
	POP	BC
;  174	        strcat(dateMsg, "/");
	LD	BC,L__220
	PUSH	BC
	LD	BC,(IX+-3)
	PUSH	BC
	CALL	_strcat
	POP	BC
	POP	BC
;  175	        strcat(dateMsg, monthS);
	LD	BC,(IX+-11)
	PUSH	BC
	LD	BC,(IX+-3)
	PUSH	BC
	CALL	_strcat
	POP	BC
	POP	BC
;  176	        strcat(dateMsg, "-");
	LD	BC,L__221
	PUSH	BC
	LD	BC,(IX+-3)
	PUSH	BC
	CALL	_strcat
	POP	BC
	POP	BC
;  177	        strcat(dateMsg, yearS);
	LD	BC,(IX+-14)
	PUSH	BC
	LD	BC,(IX+-3)
	PUSH	BC
	CALL	_strcat
	POP	BC
	POP	BC
;  178	        strcat(dateMsg, ", W: ");
	LD	BC,L__222
	PUSH	BC
	LD	BC,(IX+-3)
	PUSH	BC
	CALL	_strcat
	POP	BC
	POP	BC
;  179	        strcat(dateMsg, weekS);
	LD	BC,(IX+-17)
	PUSH	BC
	LD	BC,(IX+-3)
	PUSH	BC
	CALL	_strcat
	POP	BC
	POP	BC
;  180	        strcat(dateMsg, " : ");
	LD	BC,L__223
	PUSH	BC
	LD	BC,(IX+-3)
	PUSH	BC
	CALL	_strcat
	POP	BC
	POP	BC
;  181	    } else
	JR	L_42
L_39:
;  182	        strcat(dateMsg, "Week ");
	LD	BC,L__224
	PUSH	BC
	LD	BC,(IX+-3)
	PUSH	BC
	CALL	_strcat
	POP	BC
	POP	BC
L_42:
;  183	    if(!weekB)
	LD	A,(_weekB)
	OR	A,A
	JR	NZ,L_41
;  184	        strcat(dateMsg, "A");
	LD	BC,L__226
	PUSH	BC
	LD	BC,(IX+-3)
	PUSH	BC
	CALL	_strcat
	POP	BC
	POP	BC
;  185	    else
	JR	L_45
L_41:
;  186	        strcat(dateMsg, "B");
	LD	BC,L__227
	PUSH	BC
	LD	BC,(IX+-3)
	PUSH	BC
	CALL	_strcat
	POP	BC
	POP	BC
L_45:
;  187	    if(!classB)
	LD	A,(_classB)
	OR	A,A
	JR	NZ,L_44
;  188	        strcat(dateMsg, ", c: A");
	LD	BC,L__229
	PUSH	BC
	LD	BC,(IX+-3)
	PUSH	BC
	CALL	_strcat
	POP	BC
	POP	BC
;  189	    else
	JR	L_46
L_44:
;  190	        strcat(dateMsg, ", c: B");
	LD	BC,L__230
	PUSH	BC
	LD	BC,(IX+-3)
	PUSH	BC
	CALL	_strcat
	POP	BC
	POP	BC
L_46:
;  191	
;  192	    gfx_PrintStringXY(dateMsg, LCD_WIDTH / 2 - (gfx_GetStringWidth(dateMsg) / 2), LCD_HEIGHT - lessonHeight / 2);
	LD	BC,224
	PUSH	BC
	LD	BC,(IX+-3)
	PUSH	BC
	CALL	_gfx_GetStringWidth
	POP	BC
	LD	A,1
	CALL	__ishru_b
	LD	BC,HL
	LD	HL,160
	OR	A,A
	SBC	HL,BC
	PUSH	HL
	LD	BC,(IX+-3)
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  193	   
;  194	    free(dateMsg);
	LD	BC,(IX+-3)
	PUSH	BC
	CALL	_free
	POP	BC
;  195	    memset(dateMsg, 0, sizeof(dateMsg));
	LD	BC,3
	PUSH	BC
	LD	BC,0
	PUSH	BC
	LD	BC,(IX+-3)
	PUSH	BC
	CALL	_memset
	POP	BC
	POP	BC
	POP	BC
;  196	    free(dayS);
	LD	BC,(IX+-8)
	PUSH	BC
	CALL	_free
	POP	BC
;  197	    free(monthS);
	LD	BC,(IX+-11)
	PUSH	BC
	CALL	_free
	POP	BC
;  198	    free(yearS);
	LD	BC,(IX+-14)
	PUSH	BC
	CALL	_free
	POP	BC
;  199	    free(weekS);
	LD	BC,(IX+-17)
	PUSH	BC
	CALL	_free
	POP	BC
;  200	}
	LD	SP,IX
	POP	IX
	RET	


;**************************** _drawLessons ***************************
;Name                         Addr/Register   Size   Type
;_free                               IMPORT  -----   function
;_gfx_GetStringWidth                 IMPORT  -----   function
;_gfx_PrintStringXY                  IMPORT  -----   function
;_strcat                             IMPORT  -----   function
;_getWeekB                           IMPORT  -----   function
;_getWeekNumber                      IMPORT  -----   function
;_sprintf                            IMPORT  -----   function
;_boot_GetDate                       IMPORT  -----   function
;_weekB                              STATIC      1   variable
;_classB                             STATIC      1   variable
;_drawLesson                         IMPORT  -----   function
;_gfx_SetColor                       IMPORT  -----   function
;_gfx_FillScreen                     IMPORT  -----   function
;_memset                             IMPORT  -----   function
;_malloc                             IMPORT  -----   function
;year                                 IX-19      2   variable
;weekS                                IX-17      3   variable
;yearS                                IX-14      3   variable
;monthS                               IX-11      3   variable
;dayS                                  IX-8      3   variable
;day                                   IX-5      1   variable
;month                                 IX-4      1   variable
;dateMsg                               IX-3      3   variable


; Stack Frame Size: 25 (bytes)
;       Spill Code: 0 (instruction)


	SEGMENT STRSECT
L__21:
	DB	"09:30"
	DB	0
L__22:
	DB	"08:00"
	DB	0
L__23:
	DB	"01:30"
	DB	0
L__24:
	DB	"chuga"
	DB	0
L__25:
	DB	"B107"
	DB	0
L__26:
	DB	"Teknik"
	DB	0
L__27:
	DB	"10:15"
	DB	0
L__28:
	DB	"09:35"
	DB	0
L__29:
	DB	"00:40"
	DB	0
L__30:
	DB	"selfr, altla"
	DB	0
L__31:
	DB	"B107"
	DB	0
L__32:
	DB	"Mentorstid"
	DB	0
L__33:
	DB	"11:40"
	DB	0
L__34:
	DB	"10:20"
	DB	0
L__35:
	DB	"01:20"
	DB	0
L__36:
	DB	"drada"
	DB	0
L__37:
	DB	"B107"
	DB	0
L__38:
	DB	"Matte"
	DB	0
L__39:
	DB	"12:35"
	DB	0
L__40:
	DB	"11:50"
	DB	0
L__41:
	DB	"00:45"
	DB	0
L__42:
	DB	0
L__43:
	DB	0
L__44:
	DB	"Lunch"
	DB	0
L__45:
	DB	"14:05"
	DB	0
L__46:
	DB	"12:55"
	DB	0
L__47:
	DB	"01:10"
	DB	0
L__48:
	DB	"selfr"
	DB	0
L__49:
	DB	"B107"
	DB	0
L__50:
	DB	"Svenska"
	DB	0
L__51:
	DB	"17:00"
	DB	0
L__52:
	DB	"15:40"
	DB	0
L__53:
	DB	"01:20"
	DB	0
L__54:
	DB	"olser"
	DB	0
L__55:
	DB	"B107"
	DB	0
L__56:
	DB	"Historia"
	DB	0
L__57:
	DB	"09:10"
	DB	0
L__58:
	DB	"08:10"
	DB	0
L__59:
	DB	"01:00"
	DB	0
L__60:
	DB	"selfr"
	DB	0
L__61:
	DB	"A158"
	DB	0
L__62:
	DB	"Svenska"
	DB	0
L__63:
	DB	"11:00"
	DB	0
L__64:
	DB	"09:30"
	DB	0
L__65:
	DB	"01:30"
	DB	0
L__66:
	DB	"chuga"
	DB	0
L__67:
	DB	"B107"
	DB	0
L__68:
	DB	"Teknik"
	DB	0
L__69:
	DB	"11:55"
	DB	0
L__70:
	DB	"11:00"
	DB	0
L__71:
	DB	"00:55"
	DB	0
L__72:
	DB	0
L__73:
	DB	0
L__74:
	DB	"Lunch"
	DB	0
L__75:
	DB	"12:45"
	DB	0
L__76:
	DB	"11:55"
	DB	0
L__77:
	DB	"00:50"
	DB	0
L__78:
	DB	"altla"
	DB	0
L__79:
	DB	"H329"
	DB	0
L__80:
	DB	"Kemi"
	DB	0
L__81:
	DB	"14:15"
	DB	0
L__82:
	DB	"12:55"
	DB	0
L__83:
	DB	"01:20"
	DB	0
L__84:
	DB	"jormo"
	DB	0
L__85:
	DB	"B107"
	DB	0
L__86:
	DB	"Engelska"
	DB	0
L__87:
	DB	"10:35"
	DB	0
L__88:
	DB	"09:25"
	DB	0
L__89:
	DB	"01:10"
	DB	0
L__90:
	DB	"drada"
	DB	0
L__91:
	DB	"H341"
	DB	0
L__92:
	DB	"Matte"
	DB	0
L__93:
	DB	"11:30"
	DB	0
L__94:
	DB	"10:40"
	DB	0
L__95:
	DB	"00:50"
	DB	0
L__96:
	DB	"drada"
	DB	0
L__97:
	DB	"F206"
	DB	0
L__98:
	DB	"Fysik"
	DB	0
L__99:
	DB	"12:15"
	DB	0
L__100:
	DB	"11:30"
	DB	0
L__101:
	DB	"00:45"
	DB	0
L__102:
	DB	0
L__103:
	DB	0
L__104:
	DB	"Lunch"
	DB	0
L__105:
	DB	"09:00"
	DB	0
L__106:
	DB	"08:00"
	DB	0
L__107:
	DB	"01:00"
	DB	0
L__108:
	DB	"drada"
	DB	0
L__109:
	DB	"F206"
	DB	0
L__110:
	DB	"Matte"
	DB	0
L__111:
	DB	"11:10"
	DB	0
L__112:
	DB	"09:40"
	DB	0
L__113:
	DB	"01:30"
	DB	0
L__114:
	DB	"tejpe"
	DB	0
L__115:
	DB	0
L__116:
	DB	"Idrott"
	DB	0
L__117:
	DB	"12:20"
	DB	0
L__118:
	DB	"11:35"
	DB	0
L__119:
	DB	"00:45"
	DB	0
L__120:
	DB	0
L__121:
	DB	0
L__122:
	DB	"Lunch"
	DB	0
L__125:
	DB	"13:40"
	DB	0
L__126:
	DB	"12:20"
	DB	0
L__127:
	DB	"01:20"
	DB	0
L__128:
	DB	"drada"
	DB	0
L__129:
	DB	"F204La"
	DB	0
L__130:
	DB	"Fysik"
	DB	0
L__131:
	DB	"15:30"
	DB	0
L__132:
	DB	"14:00"
	DB	0
L__133:
	DB	"01:30"
	DB	0
L__134:
	DB	"chuga"
	DB	0
L__135:
	DB	"H341"
	DB	0
L__136:
	DB	"Teknik"
	DB	0
L__139:
	DB	"13:50"
	DB	0
L__140:
	DB	"12:20"
	DB	0
L__141:
	DB	"01:30"
	DB	0
L__142:
	DB	"chuga"
	DB	0
L__143:
	DB	"H341"
	DB	0
L__144:
	DB	"Teknik"
	DB	0
L__145:
	DB	"15:20"
	DB	0
L__146:
	DB	"14:00"
	DB	0
L__147:
	DB	"01:20"
	DB	0
L__148:
	DB	"altla"
	DB	0
L__149:
	DB	"H324La"
	DB	0
L__150:
	DB	"Kemi"
	DB	0
L__153:
	DB	"13:50"
	DB	0
L__154:
	DB	"12:20"
	DB	0
L__155:
	DB	"01:30"
	DB	0
L__156:
	DB	"chuga"
	DB	0
L__157:
	DB	"H341"
	DB	0
L__158:
	DB	"Teknik"
	DB	0
L__159:
	DB	"15:20"
	DB	0
L__160:
	DB	"14:00"
	DB	0
L__161:
	DB	"01:20"
	DB	0
L__162:
	DB	"drada"
	DB	0
L__163:
	DB	"F204La"
	DB	0
L__164:
	DB	"Fysik"
	DB	0
L__167:
	DB	"13:40"
	DB	0
L__168:
	DB	"12:20"
	DB	0
L__169:
	DB	"01:20"
	DB	0
L__170:
	DB	"altla"
	DB	0
L__171:
	DB	"H324La"
	DB	0
L__172:
	DB	"Kemi"
	DB	0
L__173:
	DB	"15:30"
	DB	0
L__174:
	DB	"14:00"
	DB	0
L__175:
	DB	"01:30"
	DB	0
L__176:
	DB	"chuga"
	DB	0
L__177:
	DB	"H341"
	DB	0
L__178:
	DB	"Teknik"
	DB	0
L__179:
	DB	"16:30"
	DB	0
L__180:
	DB	"15:30"
	DB	0
L__181:
	DB	"01:00"
	DB	0
L__182:
	DB	0
L__183:
	DB	0
L__184:
	DB	"Resurstid"
	DB	0
L__185:
	DB	"10:50"
	DB	0
L__186:
	DB	"09:50"
	DB	0
L__187:
	DB	"01:00"
	DB	0
L__188:
	DB	"altla"
	DB	0
L__189:
	DB	"H331"
	DB	0
L__190:
	DB	"Kemi"
	DB	0
L__191:
	DB	"11:45"
	DB	0
L__192:
	DB	"11:00"
	DB	0
L__193:
	DB	"00:45"
	DB	0
L__194:
	DB	0
L__195:
	DB	0
L__196:
	DB	"Lunch"
	DB	0
L__197:
	DB	"13:30"
	DB	0
L__198:
	DB	"12:10"
	DB	0
L__199:
	DB	"01:20"
	DB	0
L__200:
	DB	"drada"
	DB	0
L__201:
	DB	"F206"
	DB	0
L__202:
	DB	"Fysik"
	DB	0
L__203:
	DB	"14:40"
	DB	0
L__204:
	DB	"13:40"
	DB	0
L__205:
	DB	"01:00"
	DB	0
L__206:
	DB	"jormo"
	DB	0
L__207:
	DB	"B107"
	DB	0
L__208:
	DB	"Engelska"
	DB	0
L__209:
	DB	"15:50"
	DB	0
L__210:
	DB	"14:50"
	DB	0
L__211:
	DB	"01:00"
	DB	0
L__212:
	DB	"drada"
	DB	0
L__213:
	DB	"F203"
	DB	0
L__214:
	DB	"Matte"
	DB	0
L__215:
	DB	"%d"
	DB	0
L__216:
	DB	"%d"
	DB	0
L__217:
	DB	"%d"
	DB	0
L__218:
	DB	"%d"
	DB	0
L__220:
	DB	"/"
	DB	0
L__221:
	DB	"-"
	DB	0
L__222:
	DB	", W: "
	DB	0
L__223:
	DB	" : "
	DB	0
L__224:
	DB	"Week "
	DB	0
L__226:
	DB	"A"
	DB	0
L__227:
	DB	"B"
	DB	0
L__229:
	DB	", c: A"
	DB	0
L__230:
	DB	", c: B"
	DB	0
	SEGMENT CODE
;  201	void drawHelp(void){
_drawHelp:
;  202	    showingHelp = true;
;  203	    gfx_FillScreen(255);
	LD	BC,255
	PUSH	BC
	LD	A,1
	LD	(_showingHelp),A
	CALL	_gfx_FillScreen
	POP	BC
;  204	    gfx_PrintStringXY("Button Help", 15, 10);
	LD	BC,10
	PUSH	BC
	LD	BC,15
	PUSH	BC
	LD	BC,L__232
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  205	    gfx_PrintStringXY("enter - Quit", 10, 3 * 10);
	LD	BC,30
	PUSH	BC
	LD	BC,10
	PUSH	BC
	LD	BC,L__233
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  206	    gfx_PrintStringXY("/\\ , \\/ , 2nd - Swap Display mode", 10, 4 * 10);
	LD	BC,40
	PUSH	BC
	LD	BC,10
	PUSH	BC
	LD	BC,L__234
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  207	    gfx_PrintStringXY("< , > , alpha - Swap Timetable (A/B)", 10, 5 * 10);
	LD	BC,50
	PUSH	BC
	LD	BC,10
	PUSH	BC
	LD	BC,L__235
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  208	    gfx_PrintStringXY("clear - Swap Class (A/B)", 10, 6 * 10);
	LD	BC,60
	PUSH	BC
	LD	BC,10
	PUSH	BC
	LD	BC,L__236
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  209	    gfx_PrintStringXY("I - Show this page", 10, 7 * 10);
	LD	BC,70
	PUSH	BC
	LD	BC,10
	PUSH	BC
	LD	BC,L__237
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  210	
;  211	    gfx_PrintStringXY("If week is 101, check that the", 10, 9 * 10);
	LD	BC,90
	PUSH	BC
	LD	BC,10
	PUSH	BC
	LD	BC,L__238
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  212	    gfx_PrintStringXY("date is correct. If not, quit and enter", 10, 10 * 10);
	LD	BC,100
	PUSH	BC
	LD	BC,10
	PUSH	BC
	LD	BC,L__239
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  213	    gfx_PrintStringXY("the correct date at mode > SET CLOCK", 10, 11 * 10);
	LD	BC,110
	PUSH	BC
	LD	BC,10
	PUSH	BC
	LD	BC,L__240
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  214	}
	RET	


;**************************** _drawHelp ***************************
;Name                         Addr/Register   Size   Type
;_gfx_PrintStringXY                  IMPORT  -----   function
;_gfx_FillScreen                     IMPORT  -----   function
;_showingHelp                        STATIC      1   variable


; Stack Frame Size: 6 (bytes)
;       Spill Code: 0 (instruction)


	SEGMENT STRSECT
L__232:
	DB	"Button Help"
	DB	0
L__233:
	DB	"enter - Quit"
	DB	0
L__234:
	DB	"/\\ , \\/ , 2nd - Swap Display mode"
	DB	0
L__235:
	DB	"< , > , alpha - Swap Timetable (A/B)"
	DB	0
L__236:
	DB	"clear - Swap Class (A/B)"
	DB	0
L__237:
	DB	"I - Show this page"
	DB	0
L__238:
	DB	"If week is 101, check that the"
	DB	0
L__239:
	DB	"date is correct. If not, quit and enter"
	DB	0
L__240:
	DB	"the correct date at mode > SET CLOCK"
	DB	0
	SEGMENT CODE
;  215	
;  216	void drawLesson(int16_t x, int16_t y, char *name, char *location, char *teacher, char *length, int8_t lessonColor, int8_t textColor, char *timeFrom, char *timeTo){
_drawLesson:
	LD	HL,-4
	CALL	__frameset
;  217	    gfx_SetColor(lessonColor);
	LD	C,(IX+24)
	LD	B,0
	PUSH	BC
	CALL	_gfx_SetColor
	POP	BC
;  218	    gfx_FillRectangle(x, y, lessonWidth, lessonHeight);
	LD	BC,32
	PUSH	BC
	LD	BC,64
	PUSH	BC
	LD	BC,(IX+9)
	CALL	__stoi
	PUSH	HL
	LD	BC,(IX+6)
	CALL	__stoi
	PUSH	HL
	CALL	_gfx_FillRectangle
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  219	    gfx_SetColor(lessonBorderColor);
	LD	BC,0
	PUSH	BC
	CALL	_gfx_SetColor
	POP	BC
;  220	    gfx_Rectangle(x, y, lessonWidth, lessonHeight);
	LD	BC,32
	PUSH	BC
	LD	BC,64
	PUSH	BC
	LD	BC,(IX+9)
	CALL	__stoi
	PUSH	HL
	LD	BC,(IX+6)
	CALL	__stoi
	PUSH	HL
	CALL	_gfx_Rectangle
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  221	    gfx_SetTextTransparentColor(textColorTransparent);
	LD	BC,254
	PUSH	BC
	CALL	_gfx_SetTextTransparentColor
	POP	BC
;  222	    gfx_SetTextBGColor(textColorTransparent);
	LD	BC,254
	PUSH	BC
	CALL	_gfx_SetTextBGColor
	POP	BC
;  223	    gfx_SetTextFGColor(textColor);
	LD	C,(IX+27)
	LD	B,0
	PUSH	BC
	CALL	_gfx_SetTextFGColor
	POP	BC
;  224	    switch (lessonInfo){
	LD	HL,(_lessonInfo)
	CALL	__seqcase
L__242:
	DW	3
	DW	0
	DB	0
	DW24	L_49	

	DW24	L_50	

	DW24	L_51	

	DW24	L_52	

;  225	        case NameLocation:
L_49:
;  226	            gfx_PrintStringXY(name, x + 2, y + 2);
	LD	BC,(IX+9)
	CALL	__stoi
	INC	HL
	INC	HL
	PUSH	HL
	LD	BC,(IX+6)
	CALL	__stoi
	INC	HL
	INC	HL
	PUSH	HL
	LD	BC,(IX+12)
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  227	            gfx_PrintStringXY(location, x + lessonWidth - gfx_GetStringWidth(location) - 2, y + lessonHeight - 10);
	LD	BC,(IX+9)
	CALL	__stoi
	LD	IY,HL
	LEA	BC,IY+22
	PUSH	BC
	LD	BC,(IX+6)
	LD	DE,(IX+15)
	PUSH	DE
	CALL	__stoi
	LD	IY,HL
	LEA	DE,IY+64
	LD	(IX+-3),DE
	LD	(IX+-4),D
	CALL	_gfx_GetStringWidth
	LD	DE,(IX+-3)
	LD	D,(IX+-4)
	POP	BC
	LD	BC,HL
	LD	HL,DE
	OR	A,A
	SBC	HL,BC
	DEC	HL
	DEC	HL
	PUSH	HL
	LD	BC,(IX+15)
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  228	            break;
	JR	L_52
;  229	        case TimeStartEnd:
L_50:
;  230	            gfx_PrintStringXY(timeFrom, x + 2, y + 2);
	LD	BC,(IX+9)
	CALL	__stoi
	INC	HL
	INC	HL
	PUSH	HL
	LD	BC,(IX+6)
	CALL	__stoi
	INC	HL
	INC	HL
	PUSH	HL
	LD	BC,(IX+30)
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  231	            gfx_PrintStringXY(timeTo, x + lessonWidth - gfx_GetStringWidth(timeTo) - 2, y + lessonHeight - 10);
	LD	BC,(IX+9)
	CALL	__stoi
	LD	IY,HL
	LEA	BC,IY+22
	PUSH	BC
	LD	BC,(IX+6)
	LD	DE,(IX+33)
	PUSH	DE
	CALL	__stoi
	LD	IY,HL
	LEA	DE,IY+64
	LD	(IX+-3),DE
	LD	(IX+-4),D
	CALL	_gfx_GetStringWidth
	LD	DE,(IX+-3)
	LD	D,(IX+-4)
	POP	BC
	LD	BC,HL
	LD	HL,DE
	OR	A,A
	SBC	HL,BC
	DEC	HL
	DEC	HL
	PUSH	HL
	LD	BC,(IX+33)
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  232	            break;
	JR	L_52
;  233	        case TeacherLength:
L_51:
;  234	            gfx_PrintStringXY(teacher, x + 2, y + 2);
	LD	BC,(IX+9)
	CALL	__stoi
	INC	HL
	INC	HL
	PUSH	HL
	LD	BC,(IX+6)
	CALL	__stoi
	INC	HL
	INC	HL
	PUSH	HL
	LD	BC,(IX+18)
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  235	            gfx_PrintStringXY(length, x + lessonWidth - gfx_GetStringWidth(length) - 2, y + lessonHeight - 10);
	LD	BC,(IX+9)
	CALL	__stoi
	LD	IY,HL
	LEA	BC,IY+22
	PUSH	BC
	LD	BC,(IX+6)
	LD	DE,(IX+21)
	PUSH	DE
	CALL	__stoi
	LD	IY,HL
	LEA	DE,IY+64
	LD	(IX+-3),DE
	LD	(IX+-4),D
	CALL	_gfx_GetStringWidth
	LD	DE,(IX+-3)
	LD	D,(IX+-4)
	POP	BC
	LD	BC,HL
	LD	HL,DE
	OR	A,A
	SBC	HL,BC
	DEC	HL
	DEC	HL
	PUSH	HL
	LD	BC,(IX+21)
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;  236	            break;
;  237	    }
;  238	}
L_52:
	LD	SP,IX
	POP	IX
	RET	


;**************************** _drawLesson ***************************
;Name                         Addr/Register   Size   Type
;_gfx_GetStringWidth                 IMPORT  -----   function
;_gfx_PrintStringXY                  IMPORT  -----   function
;_lessonInfo                         STATIC      3   variable
;_gfx_SetTextFGColor                 IMPORT  -----   function
;_gfx_SetTextBGColor                 IMPORT  -----   function
;_gfx_SetTextTransparentColor        IMPORT  -----   function
;_gfx_Rectangle                      IMPORT  -----   function
;_gfx_FillRectangle                  IMPORT  -----   function
;_gfx_SetColor                       IMPORT  -----   function
;timeTo                               IX+33      3   parameter
;timeFrom                             IX+30      3   parameter
;textColor                            IX+27      1   parameter
;lessonColor                          IX+24      1   parameter
;length                               IX+21      3   parameter
;teacher                              IX+18      3   parameter
;location                             IX+15      3   parameter
;name                                 IX+12      3   parameter
;y                                     IX+9      2   parameter
;x                                     IX+6      2   parameter


; Stack Frame Size: 40 (bytes)
;       Spill Code: 0 (instruction)


;  239	
;  240	enum LessonInfo nextMode(enum LessonInfo currentLessonInfo, bool up) {
_nextMode:
	LD	HL,-9
	CALL	__frameset
;  241	    switch (currentLessonInfo){
	LD	HL,(IX+6)
	CALL	__case8
L__244:
	DW	2
	DB	0
	DW24	L_53	

	DB	1
	DW24	L_58	

	DW24	L_63	

;  242	        case NameLocation:
L_53:
;  243	            return up ? TimeStartEnd : TeacherLength;
	LD	A,(IX+9)
	OR	A,A
	JR	Z,L_56
	LD	BC,1
	LD	(IX+-3),BC
	JR	L_57
L_56:
	LD	BC,2
	LD	(IX+-3),BC
L_57:
	LD	HL,(IX+-3)
	JR	L_68
;  244	        case TimeStartEnd:
L_58:
;  245	            return up ? TeacherLength : NameLocation;
	LD	A,(IX+9)
	OR	A,A
	JR	Z,L_61
	LD	BC,2
	LD	(IX+-6),BC
	JR	L_62
L_61:
	LD	BC,0
	LD	(IX+-6),BC
L_62:
	LD	HL,(IX+-6)
	JR	L_68
;  246	        default:
L_63:
;  247	            return up ? NameLocation : TimeStartEnd;
	LD	A,(IX+9)
	OR	A,A
	JR	Z,L_66
	LD	BC,0
	LD	(IX+-9),BC
	JR	L_67
L_66:
	LD	BC,1
	LD	(IX+-9),BC
L_67:
	LD	HL,(IX+-9)
;  248	    }
;  249	}
L_68:
	LD	SP,IX
	POP	IX
	RET	


;**************************** _nextMode ***************************
;Name                         Addr/Register   Size   Type
;temp64                                IX-9      3   variable
;temp59                                IX-6      3   variable
;temp54                                IX-3      3   variable
;up                                    IX+9      1   parameter
;currentLessonInfo                     IX+6      3   parameter


; Stack Frame Size: 21 (bytes)
;       Spill Code: 0 (instruction)


;  250	
;  251	uint8_t getWeekNumber(){
_getWeekNumber:
	LD	HL,-7
	CALL	__frameset
;  252	    uint8_t day;
;  253	    uint8_t month;
;  254	    uint16_t year;
;  255	    boot_GetDate(&day, &month, &year);
	PEA	IX+-7
	PEA	IX+-2
	PEA	IX+-1
	CALL	_boot_GetDate
	POP	BC
	POP	BC
	POP	BC
;  256	    //day = 1;
;  257	    //month = 1;
;  258	    //year = 2019;
;  259	    if(year == 2019 && month <= 12){
	LD	HL,(IX+-7)
	LD.LIS	BC,2019
	OR	A,A
	SBC.SIS	HL,BC
	JR	NZ,L_88
	LD	A,12
	CP	A,(IX+-2)
	JR	C,L_88
;  260	        switch(month){
	LD	A,(IX+-2)
	UEXT	HL
	LD	L,A
	CALL	__seqcase
L__251:
	DW	12
	DW	1
	DB	0
	DW24	L_81	

	DW24	L_80	

	DW24	L_79	

	DW24	L_78	

	DW24	L_77	

	DW24	L_76	

	DW24	L_75	

	DW24	L_74	

	DW24	L_73	

	DW24	L_72	

	DW24	L_71	

	DW24	L_70	

	DW24	L_86	

;  261	            case 12:
L_70:
;  262	                day += 30;
	LD	A,(IX+-1)
	ADD	A,30
	LD	(IX+-1),A
;  263	            case 11:
L_71:
;  264	                day += 31;
	LD	A,(IX+-1)
	ADD	A,31
	LD	(IX+-1),A
;  265	            case 10:
L_72:
;  266	                day += 30;
	LD	A,(IX+-1)
	ADD	A,30
	LD	(IX+-1),A
;  267	            case 9:
L_73:
;  268	                day += 31;
	LD	A,(IX+-1)
	ADD	A,31
	LD	(IX+-1),A
;  269	            case 8:
L_74:
;  270	                day += 31;
	LD	A,(IX+-1)
	ADD	A,31
	LD	(IX+-1),A
;  271	            case 7:
L_75:
;  272	                day += 30;
	LD	A,(IX+-1)
	ADD	A,30
	LD	(IX+-1),A
;  273	            case 6:
L_76:
;  274	                day += 31;
	LD	A,(IX+-1)
	ADD	A,31
	LD	(IX+-1),A
;  275	            case 5:
L_77:
;  276	                day += 30;
	LD	A,(IX+-1)
	ADD	A,30
	LD	(IX+-1),A
;  277	            case 4:
L_78:
;  278	                day += 31;
	LD	A,(IX+-1)
	ADD	A,31
	LD	(IX+-1),A
;  279	            case 3:
L_79:
;  280	                day += 28;
	LD	A,(IX+-1)
	ADD	A,28
	LD	(IX+-1),A
;  281	            case 2:
L_80:
;  282	                day += 31;
	LD	A,(IX+-1)
	ADD	A,31
	LD	(IX+-1),A
;  283	            case 1:
L_81:
;  284	                day += 0;
	LD	A,(IX+-1)
	LD	(IX+-1),A
;  285	        }
L_86:
;  286	        return day / 7 + (day % 7 == 1 ? 0 : 1);
	LD	A,(IX+-1)
	UEXT	HL
	LD	L,A
	LD	BC,7
	CALL	__irems
	OR	A,A
	LD	BC,1
	SBC	HL,BC
	JR	NZ,L_84
	LD	BC,0
	LD	(IX+-5),BC
	JR	L_85
L_84:
	LD	(IX+-5),BC
L_85:
	LD	A,(IX+-1)
	UEXT	HL
	LD	L,A
	LD	BC,7
	CALL	__idivs
	LD	BC,(IX+-5)
	ADD	HL,BC
	LD	A,L
	JR	L_89
;  287	    } else {
L_88:
;  288	        return 101;
	LD	A,101
;  289	    }
;  290	}
L_89:
	LD	SP,IX
	POP	IX
	RET	


;**************************** _getWeekNumber ***************************
;Name                         Addr/Register   Size   Type
;_boot_GetDate                       IMPORT  -----   function
;year                                  IX-7      2   variable
;temp82                                IX-5      3   variable
;month                                 IX-2      1   variable
;day                                   IX-1      1   variable


; Stack Frame Size: 13 (bytes)
;       Spill Code: 0 (instruction)


;  291	
;  292	bool getWeekB() {
_getWeekB:
;  293	    switch (getWeekNumber()){
	CALL	_getWeekNumber
	UEXT	HL
	LD	L,A
	CALL	__seqcase
L__254:
	DW	24
	DW	1
	DB	0
	DW24	L_90	

	DW24	L_91	

	DW24	L_92	

	DW24	L_93	

	DW24	L_94	

	DW24	L_95	

	DW24	L_112	

	DW24	L_96	

	DW24	L_97	

	DW24	L_98	

	DW24	L_99	

	DW24	L_100	

	DW24	L_101	

	DW24	L_102	

	DW24	L_103	

	DW24	L_112	

	DW24	L_104	

	DW24	L_105	

	DW24	L_106	

	DW24	L_107	

	DW24	L_108	

	DW24	L_109	

	DW24	L_110	

	DW24	L_111	

	DW24	L_112	

;  294	        case 1:
L_90:
;  295	            return false;
	XOR	A,A
	JR	L_113
;  296	        case 2:
L_91:
;  297	            return true;
	LD	A,1
	JR	L_113
;  298	        case 3:
L_92:
;  299	            return false;
	XOR	A,A
	JR	L_113
;  300	        case 4:
L_93:
;  301	            return true;
	LD	A,1
	JR	L_113
;  302	        case 5:
L_94:
;  303	            return false;
	XOR	A,A
	JR	L_113
;  304	        case 6:
L_95:
;  305	            return true;
	LD	A,1
	JR	L_113
;  306	        // V7 Lov
;  307	        case 8:
L_96:
;  308	            return false;
	XOR	A,A
	JR	L_113
;  309	        case 9:
L_97:
;  310	            return true;
	LD	A,1
	JR	L_113
;  311	        case 10:
L_98:
;  312	            return false;
	XOR	A,A
	JR	L_113
;  313	        case 11:
L_99:
;  314	            return true;
	LD	A,1
	JR	L_113
;  315	        case 12:
L_100:
;  316	            return false;
	XOR	A,A
	JR	L_113
;  317	        case 13:
L_101:
;  318	            return true;
	LD	A,1
	JR	L_113
;  319	        case 14:
L_102:
;  320	            return false;
	XOR	A,A
	JR	L_113
;  321	        case 15:
L_103:
;  322	            return true;
	LD	A,1
	JR	L_113
;  323	        // V16 Lov
;  324	        case 17:
L_104:
;  325	            return false;
	XOR	A,A
	JR	L_113
;  326	        case 18:
L_105:
;  327	            return true;
	LD	A,1
	JR	L_113
;  328	        case 19:
L_106:
;  329	            return false;
	XOR	A,A
	JR	L_113
;  330	        case 20:
L_107:
;  331	            return true;
	LD	A,1
	JR	L_113
;  332	        case 21:
L_108:
;  333	            return false;
	XOR	A,A
	JR	L_113
;  334	        case 22:
L_109:
;  335	            return true;
	LD	A,1
	JR	L_113
;  336	        case 23:
L_110:
;  337	            return false;
	XOR	A,A
	JR	L_113
;  338	        case 24:
L_111:
;  339	            return true;
	LD	A,1
	JR	L_113
;  340	    }
L_112:
;  341	    return false;
	XOR	A,A
L_113:
	RET	


;**************************** _getWeekB ***************************
;Name                         Addr/Register   Size   Type
;_getWeekNumber                      IMPORT  -----   function


; Stack Frame Size: 6 (bytes)
;       Spill Code: 0 (instruction)


	XREF _strcat:ROM
	XREF _memset:ROM
	XREF _sprintf:ROM
	XREF _ti_GetC:ROM
	XREF _ti_PutC:ROM
	XREF _ti_Close:ROM
	XREF _ti_Open:ROM
	XREF _ti_CloseAll:ROM
	XREF _gfx_GetStringWidth:ROM
	XREF _gfx_SetTextTransparentColor:ROM
	XREF _gfx_SetTextBGColor:ROM
	XREF _gfx_SetTextFGColor:ROM
	XREF _gfx_PrintStringXY:ROM
	XREF _gfx_SwapDraw:ROM
	XREF _gfx_SetDraw:ROM
	XREF _gfx_FillRectangle:ROM
	XREF _gfx_Rectangle:ROM
	XREF _gfx_FillScreen:ROM
	XREF _gfx_SetColor:ROM
	XREF _gfx_End:ROM
	XREF _gfx_Begin:ROM
	XREF _free:ROM
	XREF _malloc:ROM
	XREF _os_GetCSC:ROM
	XREF _boot_GetDate:ROM
	XREF __idivs:ROM
	XREF __irems:ROM
	XREF __stoi:ROM
	XREF __stoiu:ROM
	XREF __frameset:ROM
	XREF __case8:ROM
	XREF __seqcase:ROM
	XREF __ishru_b:ROM
	XDEF _getWeekB
	XDEF _getWeekNumber
	XDEF _nextMode
	XDEF _drawLesson
	XDEF _drawHelp
	XDEF _drawLessons
	XDEF _main
	XDEF _showingHelp
	XDEF _classB
	XDEF _weekB
	XDEF _lessonInfo
	END
